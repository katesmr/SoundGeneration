var inherit = require("../utils/inherit");
var BaseView = require("./BaseView");
var UserInfoBar = require("./UserInfoBar");
var TrackView = require("./TrackView");
var TrackListView = require("./TrackListView");
var ProjectListView = require("./ProjectListView");
var PlayerView = require("./PlayerView");
var Factory = require("./Factory");
var commonEventNames = require("../core/commonEventNames");
var windowsTransport = require("./windowsTransport");

module.exports = MenuBar;

function MenuBar(){
    BaseView.call(this, "menubar");

    this.menu = $("<div class='ui horizontal list menu-bar'>");

    this.userInfoBar = new UserInfoBar();
    this.backButton = Factory.createIconButton("ui button back user-only", "large arrow left icon", "");
    this.exportProjectButton = Factory.createButtonPopup("export project", null, "export", "Click to save on device");
    this.exportTrackButton = Factory.createButtonPopup("export track", null, "export", "Click to save on device");
    this.player = new PlayerView();
    this.recordButton = Factory.createButtonPopup("record", null, "record", "Click to record sound");
    this.clearButton = Factory.createButtonPopup("clear", null, "clear", "Click to clear sound");

    this._build();
}

inherit(MenuBar, BaseView);

MenuBar.prototype._build = function(){
    var container = this.getContainer();

    //windowsTransport.notify(commonEventNames.E_DEFINE_USER);

    this.backButton.on("click", function(event){
        // Possible additional visual effect for this button...
        windowsTransport.notify(commonEventNames.ON_BACK_BUTTON_CLICK);
    });

    this.recordButton.on("click", function(event){
        windowsTransport.notify(commonEventNames.E_RECORD_TRACK, $(this));
    });

    this.clearButton.on("click", function(event){
        windowsTransport.notify(commonEventNames.E_CLEAR_RECORD_TRACK);
    });

    this.exportTrackButton.on("click", function(event){
        windowsTransport.notify(commonEventNames.E_EXPORT_TRACK);
    });

    this.exportProjectButton.on("click", function(event){
        windowsTransport.notify(commonEventNames.E_EXPORT_PROJECT);
    });

    this.hideButtons();

    this.menu.append(this.backButton);
    this.menu.append(this.exportProjectButton);
    this.menu.append(this.exportTrackButton);
    this.menu.append(this.player.getContainer());
    this.menu.append(this.recordButton);
    this.menu.append(this.clearButton);
    this.menu.append(this.userInfoBar.getContainer());

    container.append(this.menu);
};

MenuBar.prototype.adaptToActiveWindow = function(newWindow){
    if(newWindow instanceof TrackView){
        this.showComponentForTrack(newWindow);
        this.recordButton.show();
        this.clearButton.show();
        this.exportTrackButton.show();
        this.exportProjectButton.hide();
    } else if(newWindow instanceof TrackListView){
        this.showComponentForTrack(newWindow);
        this.hideButtons();
        this.exportProjectButton.show();
    } else if(newWindow instanceof ProjectListView){
        this.backButton.hide();
        this.player.hide();
        this.exportProjectButton.hide();
    }
};

MenuBar.prototype.showComponentForTrack = function(newWindow){
    this.backButton.show();
    this.player.show();
    this.player.audioPlayer.setModel(newWindow.controller.model);
};

MenuBar.prototype.hideButtons = function(){
    this.exportTrackButton.hide();
    this.recordButton.hide();
    this.clearButton.hide();
};
