var inherit = require("../utils/inherit");
var DrumRecorder = require("../model/DrumRecorder");
var DrumModel = require("../model/DrumModel");
var BaseInstrument = require("./BaseInstrument");

module.exports = DrumMachine;

function DrumMachine(track){
    BaseInstrument.call(this, track, "drum-machine");

    this.drumGrid = null;

    this._build();
}

inherit(DrumMachine, BaseInstrument);

DrumMachine.prototype._build = function(){
    var self = this;
    var container = this.getContainer();

    this.createDrumGrid(DrumModel.images, DrumModel.keys, DrumModel.popupText);

    container.append(this.drumGrid);
};

DrumMachine.prototype._recordHandler = function(drumObject){
    this.track.addDrum(drumObject.instrument);
    if(this.track.playObjects.length === 0){
        this.startTime = Date.now();
        // this is the first button pressed, so it's time to remember the start time!
        //this.track.playObjects.push(new DrumRecorder(drumObject.instrument, drumObject.playValue, 0));
        this.track.createPlayObject(drumObject, 0);
    } else{
        //this.track.playObjects.push(new DrumRecorder(drumObject.instrument, drumObject.playValue, Date.now()-this.startTime));
        this.track.createPlayObject(drumObject, Date.now()-this.startTime);
    }
};

DrumMachine.prototype._keyDownHandler = function(key){
    var drumObject = null;
    var drumName = DrumModel.getDrumNameForKey(key);
    if(drumName !== null){
        if(this.track){
            drumObject = this.track.allDrumObjects[drumName];
            drumObject.playNow();
            if (this.isRecordNow === true) {
                this._recordHandler(drumObject);
            }
        }
    }
};

DrumMachine.prototype.keyDown = function(){
    var key;
    var self = this;
    $(document).keydown(function(event){
        key = String.fromCharCode(event.keyCode);
        self._keyDownHandler(key);
    });
};

DrumMachine.prototype.createDrumGrid = function(imagePathList, keyList, drumExploring){
    var i, j, key;
    var self = this;
    var $img = null;
    var $keys = null;
    var $column = null;
    var $keyItem = null;
    this.drumGrid = $("<div class='ui two column grid drum'>");
    for(i = 0; i < imagePathList.length; ++i){
        $img = $("<img class='ui small image' src='" + imagePathList[i] + "' " +
                 "data-content='" + drumExploring[i] + "'>");
        $img.popup();
        $keys = $("<div class='keys'>");
        for(j = 0; j < keyList[i].length; ++j){
            key = keyList[i][j];
            $keyItem = $("<div id='" + key + "' " +
                         "data-content='Click or press key " + key + " for play'>"
                         + key + "</div>");
            $keyItem.on("click", function(event){
                self._keyDownHandler($(this).attr("id"));
            });
            $keyItem.popup();
            $keys.append($keyItem);
        }
        $column = $("<div class='column'>");
        $column.append($keys);
        $column.append($img);
        this.drumGrid.append($column);
    }
};
