var inherit = require("../utils/inherit");
var BaseView = require("./BaseView");
var Factory = require("./Factory");
var Observer = require("observer");
var commonEventNames = require("../core/commonEventNames");

module.exports = MessageModal;

function MessageModal(){
    BaseView.call(this, "ui modal message");
    this.text = $("<p></p>");
    this.buttons = $("<div class='button-group'>");
    this.okButton = Factory.createButton("ui button", "ok");
    this.cancelButton = Factory.createButton("ui button", "cancel");
    this.observer = new Observer();

    this._build();
}

inherit(MessageModal, BaseView);

MessageModal.prototype._build = function(){
    var container = this.getContainer();
    var self = this;

    this.okButton.on("click", function(event){
        self.observer.notify(commonEventNames.E_CONFIRMED, null);
        self.hide();
    });

    this.cancelButton.on("click", function(event){
        self.observer.notify(commonEventNames.E_DECLINED, null);
        self.hide();
    });

    this.buttons.append(this.okButton);
    this.buttons.append(this.cancelButton);
    container.append(this.text);
    container.append(this.buttons);

};

MessageModal.prototype.show = function(message){

    this.getContainer().modal({
        closable : false,
        allowMultiple: false,
        context: $(".window-manager")
    });

    this.text.text(message);
    this.getContainer().modal("show");
};

MessageModal.prototype.hide = function(){
    this.text.text(""); // reset old message
    this.getContainer().modal("hide");
};
