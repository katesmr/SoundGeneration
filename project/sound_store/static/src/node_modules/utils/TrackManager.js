var mergeBuffers = require('merge-audio-buffers');
var AudioHelper = require("./AudioHelper");

module.exports = TrackManager;

var AudioContext = window.AudioContext || window.webkitAudioContext;

function TrackManager(){}

// get array with Tone.Synth
TrackManager.mergeTracks = function(bufferList){
    var context = new AudioContext();
    return mergeBuffers(bufferList, context);
};

TrackManager.save = (function(){
    var a = document.createElement("a");
    document.body.appendChild(a);
    a.style = "display: none";
    return function(data, fileName){
        if(fileName === undefined){
            fileName = "sound.wav";
        }
        var blob;
        var buffer;
        if(data instanceof AudioBuffer){
            blob = AudioHelper.AudioBufferToBlob(data);
        } else{
            buffer = AudioHelper.getAudioContextBuffer(data.context);
            blob = new Blob([buffer], {"type": "audio/x-wav"});
        }
        var url = window.URL.createObjectURL(blob);
        a.href = url;
        a.download = fileName;
        a.click();
        window.URL.revokeObjectURL(url);
    };
}());
