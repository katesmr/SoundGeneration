var inherit = require("../utils/inherit");
var BaseFilterModel = require("./BaseFilterModel");

module.exports = VibratoFilter;

function VibratoFilter(options){
    BaseFilterModel.call(this, options);
}

inherit(VibratoFilter, BaseFilterModel);

VibratoFilter.prototype.generate = function(){
    this.filter = new Tone.Vibrato(this.options);
};

VibratoFilter.prototype.getFrequency = function(){
    return this.filter.frequency.value;
};

VibratoFilter.prototype.getDepth = function(){
    return this.filter.depth.value;
};

VibratoFilter.prototype.getType = function(){
    return this.filter.type;
};

VibratoFilter.prototype.getOptions = function(){
    return this.options;
};

VibratoFilter.prototype.setFrequency = function(value){
    this.options.frequency = value;
    this.filter.frequency.value = value;
};

VibratoFilter.prototype.setDepth = function(value){
    this.options.depth = value;
    this.filter.depth.value = value;
};

VibratoFilter.prototype.setType = function(value){
    this.options.type = value;
    this.filter.type = value;
};

VibratoFilter.prototype.setOptions = function(options){
    this.setFrequency(options.frequency);
    this.setDepth(options.depth);
    this.setType(options.type);
};

VibratoFilter.prototype.setByName = function(optionName, value){
    switch(optionName){
        case "frequency":
            this.setFrequency(value);
            break;
        case "depth":
            this.setDepth(value);
            break;
        case "type":
            this.setType(value);
            break;
    }
};

