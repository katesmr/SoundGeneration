var PlayerRecorder = require("./PlayerRecorder");

module.exports = PlayerModel;

function PlayerModel(url, playSetting){
    this.url = url;
    this.instrument = null;
    this.playSetting = playSetting || [];
    this.playObjects = [];
    this.playValue = null;
    this.createPlayObjects();
    this.setInstrument();
    this.trackObject = this._generate();
}

PlayerModel.prototype._generate = function(){
    return new Tone.Player({"url": this.url}).toMaster();
};

PlayerModel.prototype.setInstrument = null;

PlayerModel.prototype.start = function(){
    var i;
    for(i =0; i < this.playObjects.length; ++i){
        this.playObjects[i].play(this.trackObject);
    }
};

PlayerModel.prototype.playNow = function(){
    this.trackObject.start();
};

PlayerModel.prototype.stop = function(){
    this.trackObject.stop();
};

PlayerModel.prototype.emptyPlaySetting = function(){
    this.playSetting.length = 0;
    this.playObjects.length = 0;
};

PlayerModel.prototype.createPlayObject = function(startTime){
    this.playObjects.push(new PlayerRecorder(this.instrument, startTime));
};

PlayerModel.prototype.createPlayObjects = function(){
    var i, tokenPlaySetting;
    for(i = 0; i < this.playSetting.length; ++i){
        tokenPlaySetting = this.playSetting[i];
        this.createPlayObject(tokenPlaySetting.startTime);
    }
};

