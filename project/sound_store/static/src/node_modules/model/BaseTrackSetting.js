module.exports = BaseTrackSetting;

/**
 */
function BaseTrackSetting(name, isEnabled, options){
    Object.defineProperties(this, {
        "name": {
            "value": name,
            "writable": false,
            "enumerable": true
        },
        "isEnabled": {
            "value": !!isEnabled, // initial value
            "writable": true, // is able to be changed
            "enumerable": true // is it possible to see this variable when doing for..in or JSON.stringify
        },
        "options": {
            "value": options,
            "writable": false,
            "enumerable": true
        }
    });
}

BaseTrackSetting.prototype.reset = function(){
    var key;
    var target = this.options;
    for (key in target){
        if (target.hasOwnProperty(key)){
            target[key].reset();
        }
    }
};

BaseTrackSetting.prototype.set = function(value){
    //this.options[optionName].set(value);
    this.options.value.set(value);
};

BaseTrackSetting.prototype.valueOf = function(){
    var key;
    var result = {};
    var target = this.options;
    for(key in target){
        if(target.hasOwnProperty(key)){
            result[key] = target[key].valueOf();
        }
    }
    return result;
};

BaseTrackSetting.prototype.toString = function(){
    return "[object BaseTrackSettingSingleOption]";
};
