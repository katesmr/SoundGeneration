var AudioBufferRecorder = require("./AudioBufferRecorder");
var DrumAudioBufferRecorder = require("./DrumAudioBufferRecorder");
var TrackDrum = require("./TrackDrum");
var TrackManager = require("../utils/TrackManager");

module.exports = ProjectRecorder;

function ProjectRecorder(projectModel){
    this.projectModel = projectModel;
    this.models = this.projectModel.__data;
    console.log(this.models);
    this.recorders = [];
    this.buffers = [];
}

ProjectRecorder.prototype.setModel = function(model){
    if(model){
        this.projectModel = model;
        this.models = this.projectModel.__data;
    }
};

ProjectRecorder.prototype.createRecord = function(callback){
    var i, model, recorder;
    for(i = 0; i < this.models.length; ++i){
        model = this.models[i];
        if(model instanceof TrackDrum){
            recorder = new DrumAudioBufferRecorder();
            recorder.setModel(model);
        } else{
            recorder = new AudioBufferRecorder();
            recorder.setModel(model);
        }
        recorder.record(callback);
    }
};

ProjectRecorder.prototype.saveBuffers = function(buffer){
    var result;
    this.buffers.push(buffer);
    if(this.buffers.length === this.models.length){
        result = TrackManager.mergeTracks(this.buffers);
        console.log("project");
        console.log(result);
        TrackManager.save(result, this.projectModel.name);
    }
};
